*easymotion_segments.txt*

Version: 0.1
Author : aykamko <aykamko@gmail.com>
License: MIT license  {{{
    Permission is hereby granted, free of charge, to any person obtaining
    a copy of this software and associated documentation files (the
    "Software"), to deal in the Software without restriction, including
    without limitation the rights to use, copy, modify, merge, publish,
    distribute, sublicense, and/or sell copies of the Software, and to
    permit persons to whom the Software is furnished to do so, subject to
    the following conditions:

    The above copyright notice and this permission notice shall be included
    in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
    OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
    IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
    CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
    TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
}}}

CONTENTS                                           *easyoperator_line_contents*

    Introduction ....................... |easymotion-segments-introduction|
    Requirements ....................... |easymotion-segments-requirements|
    Default mappings ................... |easymotion-segments-default-mappings|
    Custom mappings .................... |easymotion-segments-custom-mappings|

==============================================================================
INTRODUCTION                                   *easymotion-segments-introduction*

An EasyMotion extension plugin that allows jumping to variable segments in
words. A variable segment is defined to be a substring in any identifier
character followed by an underscore ("snake case") or a lowercase identifier
character followed by an uppercase character ("camel case"). Check out
https://github.com/Julian/vim-textobj-variable-segment

This plugin was inspired by *vim-textobj-variable-segment*

    https://github.com/Julian/vim-textobj-variable-segment

a *vim-textobj-user* extension that enables manipulating variable segments as
text objects. I highly recommend using these two plugins in conjunction with
*vim-easymotion-segments*

(Credit to https://github.com/haya14busa/vim-easyoperator-line as well.)

==============================================================================
REQUIREMENTS                                   *easymotion-segments-requirements*

vim-easymotion-segments depends on vim-easymotion plugin, version 2.0

https://github.com/Lokaltog/vim-easymotion

Vi-compatible mode must be disabled.

==============================================================================
DEFAULT MAPPINGS                           *easymotion-segments-default-mappings*

    Start of segment, forwards:  {operator}<Plug>(easymotion-prefix)v
    Start of segment, backwards: {operator}<Plug>(easymotion-prefix)V
    End of segment, forwards:    {operator}<Plug>(easymotion-prefix)gv
    End of segment, backwards:   {operator}<Plug>(easymotion-prefix)gV

    NOTE: Default <Plug>(easymotion-prefix) is <Leader><Leader>

The default configuration defines the following mappings in visual, normal, and
operator-pending mode. If you want to map by yourself, set following to 0.
>
    let g:EasyMotionSegments_do_mapping = 0
<
Default: 1

You can also change the default key mapped to motion. For example, if you'd
like to use *'s'* (i.e. {operator}<Plug>(easymotion-prefix)s) as your mapping
instead of the default, set the following:
>
    let g:EasyMotionSegments_key = 's'
<
Default: *'v'*

==============================================================================
CUSTOM MAPPINGS                             *easymotion-segments-custom-mappings*

<Plug>(easymotion-segments-LF)                   *<Plug>(easymotion-segments-LF)*
<Plug>(easymotion-segments-LB)                   *<Plug>(easymotion-segments-LB)*
    Move/operate/visual select to start of segment, forwards and backwards,
    respectively.

<Plug>(easymotion-segments-RF)                   *<Plug>(easymotion-segments-RF)*
<Plug>(easymotion-segments-RB)                   *<Plug>(easymotion-segments-RB)*
    Move/operate/visual select to end of segment, forwards and backwards,
    respectively.

Example:
>
    omap <Leader>s  <Plug>(easymotion-segments-LF)
    omap <Leader>S  <Plug>(easymotion-segments-LB)

==============================================================================
vim:tw=78:sw=4:ts=8:ft=help:norl:
